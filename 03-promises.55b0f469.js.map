{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAY/B,OAXkB,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,OAnBK,CACVO,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,qBACnCE,eAAgBH,SAASC,cAAc,oBACvCG,YAAaJ,SAASC,cAAc,wBAGlCF,KAAKM,iBAAiB,UAiB1B,SAAoBC,GAClBA,EAAMC,iBAMN,IAJA,IAAIC,EAAYC,OAAOC,KAAKR,WAAWS,OACnCC,EAASH,OAAOC,KAAKN,YAAYO,OACjCE,EAAWJ,OAAOC,KAAKP,eAAeQ,OAEjCG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCxB,EAAcwB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI3B,GACZ4B,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAGjD+B,OAAM,SAAAP,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClB2B,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAGjDgB,GAAaK,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst opt = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=delay]'),\n  inputDelayStep: document.querySelector('input[name=step]'),\n  inputAmount: document.querySelector('input[name=amount]'),\n};\n\nopt.form.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  const promiseMy = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promiseMy;\n}\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  let waitDelay = Number(refs.inputDelay.value);\n  let amount = Number(refs.inputAmount.value);\n  let waitStep = Number(refs.inputDelayStep.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, waitDelay)\n      .then(({ position, delay }) => {\n        console.log(position);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    waitDelay += waitStep;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","inputDelay","inputDelayStep","inputAmount","addEventListener","event","preventDefault","waitDelay","Number","refs","value","amount","waitStep","i","then","param","console","log","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.55b0f469.js.map"}